version: "3.9"
services:
  catalog:
    container_name: catalog
    networks:
      net1:
    build:
        context: ./
        dockerfile: ./catalog/Dockerfile
    healthcheck:
        test: ["CMD-SHELL", "curl -f http://catalog:8080/catalog/getBroker | grep uri"]
        interval: 15s
        timeout: 7s
        retries: 5
    volumes:
      - .:/code
    ports:
      - "8080:8080"             # accessible using the 8080 port

  simulateddevice2:
    container_name: simulateddevice2
    networks:
      net1:
    depends_on:
      catalog:
        condition: service_healthy
    links:
        - catalog
    volumes:
      - .:/code
    build:
        context: ./
        dockerfile: ./simulateddevice2/Dockerfile

  simulateddevice:
    container_name: simulateddevice
    networks:
      net1:
    depends_on:
      catalog:
        condition: service_healthy
    links:
        - catalog
    volumes:
      - .:/code
    build:
        context: ./
        dockerfile: ./simulateddevice/Dockerfile


  externalweatherapi:
    container_name: externalweatherapi
    ports:
      - "8070:8080"             # accessible using the 8070 port for testing
    networks:
      net1:
    depends_on:
      catalog:
        condition: service_healthy
    links:
        - catalog
    volumes:
      - .:/code
    environment:
        - OPENWETHERMAPAPIKEY=${OPENWETHERMAPAPIKEY}
    build:
        context: ./
        dockerfile: ./externalweatherapi/Dockerfile

  telegram-bot:
    container_name: telegram-bot
    networks:
      net1:
    depends_on:
      catalog:
        condition: service_healthy
    links:
      - catalog
    volumes:
      - .:/code
    environment:
      - TELEGRAMTOKEN=${TELEGRAMTOKEN}
    build:
      context: ./
      dockerfile: ./telegram-bot/Dockerfile

  thinkspeakadaptor:
    container_name: thinkspeakadaptor
    networks:
      net1:
    depends_on:
      catalog:
        condition: service_healthy
    links:
        - catalog
    volumes:
      - .:/code
    environment:
        - THINGSPEAKAPIKEY=${THINGSPEAKAPIKEY}
    build:
        context: ./
        dockerfile: ./thinkspeakadaptor/Dockerfile
    ports:
      - "8090:8080"

  controlstrategy:
    container_name: controlstrategy
    networks:
      net1:
    depends_on:
      catalog:
        condition: service_healthy
    links:
        - catalog
    volumes:
      - .:/code
    build:
      context: ./
      dockerfile: ./controlstrategy/Dockerfile
    

  webinterface:
    container_name: webinterface
    networks:
      net1:
    depends_on:
      catalog:
        condition: service_healthy
    links:
        - catalog
    volumes:
      - .:/code
    build:
        context: ./
        dockerfile: ./webinterface/Dockerfile
    ports:
      - "8088:8080"             # accessible using the 8080 port

  node-red:
    container_name: node-red
    image: nodered/node-red:latest
    user: root:root             # necessary, otherwise we get 'access denied'
    entrypoint: /data/entrypoint.sh
    depends_on:
      catalog:
        condition: service_healthy
    environment:
      - TZ=Europe/Amsterdam
    ports:
      - "80:1880"
    networks:
      net1:
    volumes:
      - ./node-red:/data

volumes:
  node-red:
  simulateddevice:
  simulateddevice2:
  externalweatherapi:
  catalog:
  webinterface:
  thinkspeakadaptor:
  controlstrategy:

networks:
  net1:
    driver: bridge
